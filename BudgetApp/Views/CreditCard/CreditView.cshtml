@model IQueryable<BudgetApp.Domain.Entities.CreditEntry>
@using BudgetApp.Domain.Entities
@using BudgetApp.WebUI.ViewModels

@{
    ViewBag.Title = "CreditView";
}

<h2>CreditView</h2>


@{string noDate = "None";}
<div id="update-payments">
    @Ajax.ActionLink("Update Payments", "UpdatePaymentPlans", new AjaxOptions {
        UpdateTargetId = "payment-table",
    })
</div>
<table id="credit-table" style="display:inline-table; margin-left: 0px" border="0">
    <tr>
        <td style="visibility:hidden; width:0px"></td>
        <th style="text-align:center; width:100px"> Date </th>
        <th style="text-align:center"> Description </th>
        <th style="text-align:center"> Purchase Total ($) </th>
        <th style="text-align:center"> Amount Paid ($) </th>
        <th style="text-align:center"> Amount Remaining ($) </th>
        <th style="text-align:center"> Card Used </th>
        <th style="text-align:center"> Who's Paying </th>
        <th style="text-align:center; width:100px"> Pay Date </th>
    </tr>
@foreach (CreditEntry entry in Model)
{
    // Set the selected Card and Responsible party for the respective dropdowns
    SelectList cardList = new SelectList( (IEnumerable<SelectListItem>)ViewBag.Cards, "value", "text", entry.Card.Card);
    SelectList partyList = new SelectList((IEnumerable<SelectListItem>)ViewBag.Parties, "value", "text", entry.ResponsibleParty.PartyName);
    
        <tr>
            <td id="EntryId-@(entry.CreditEntryId)" style="visibility:hidden; width:0px">@entry.CreditEntryId</td>
            <td id="date-@(entry.CreditEntryId)" class="creditdatefield"><input style="width: 100px; border: none; font-size: small; text-align:center" id="entry-date-@(entry.CreditEntryId)" type="text" value="@entry.Date.ToShortDateString()" /></td>
            <td id="entry-description-@(entry.CreditEntryId)" class="creditlistcell">@entry.Description</td>
            <td id="entry-amount-@(entry.CreditEntryId)" class="creditlist-editablecell">@entry.PurchaseTotal</td>
            <td id="amount-paid-@(entry.CreditEntryId)" class="creditlist-editablecell">@entry.AmountPaid</td>
            <td id="amount-remaining-@(entry.CreditEntryId)" class="creditlistcell-staticcell">@entry.AmountRemaining</td>
            <td id="card-spinner" class="spinner">@Html.DropDownList("card-spinner-" + entry.CreditEntryId, cardList, new { @class = "edit-spinner" })</td>
            <td id="party-spinner" class="spinner">@Html.DropDownList("party-spinner-" + entry.CreditEntryId, partyList, new { @class = "edit-spinner" })</td>
            <td id="paydate-spinner-@(entry.CreditEntryId)"><input style="width: 100px; border: none; font-size: small; text-align:center" id="scheduledate-@(entry.CreditEntryId)" class="test" type="text" value="@(entry.PayDate.HasValue
                                                                                                                                                                    ? entry.PayDate.Value.ToShortDateString()
                                                                                                                                                                    : noDate 
                                                                                                                                                                  )" /></td>
        </tr>
}
</table>

<div id="payment-table" style="display:inline-table; margin-left: 40px">
    @Html.Partial("AggregatePaymentPlans", ViewBag.PaymentPlans as PaymentPlanViewModel)
</div>
<br />
<br />
<div id="editform" style="display: none;">
    @{Html.RenderPartial("PartialCreditEdit", new CreditEntry());}
</div>
<a href="#" id="addentry">Add Purchase</a>